<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Run the functional test from libgfapi-python against the latest build of the glusterfs packages.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.17.1">
      <projectUrl>https://github.com/gluster/libgfapi-python/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.15">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>TEST_SCRIPT</name>
          <description>Test script to execute on the reserved machine, should move to the gluster/glusterfs-patch-acceptance-tests at one point.</description>
          <defaultValue>https://raw.githubusercontent.com/nixpanic/glusterfs-patch-acceptance-tests/centos-ci/libgfapi-python/centos-ci/libgfapi-python/run-test.sh</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>gluster</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.python.Python plugin="python@1.2">
      <command>#
# from: https://raw.githubusercontent.com/kbsingh/centos-ci-scripts/master/build_python_script.py
#
# This script uses the Duffy node management api to get fresh machines to run
# your CI tests on. Once allocated you will be able to ssh into that machine
# as the root user and setup the environ
#
# XXX: You need to add your own api key below, and also set the right cmd= line 
#      needed to run the tests
#
# Please note, this is a basic script, there is no error handling and there are
# no real tests for any exceptions. Patches welcome!

import json, urllib, subprocess, sys, os

url_base=&quot;http://admin.ci.centos.org:8080&quot;
ver=&quot;7&quot;
arch=&quot;x86_64&quot;
count=1
script_url=os.getenv(&quot;TEST_SCRIPT&quot;)

# read the API key for Duffy from the ~/duffy.key file
fo=open(&quot;/home/gluster/duffy.key&quot;)
api=fo.read().strip()
fo.close()

# build the URL to request the system(s)
get_nodes_url=&quot;%s/Node/get?key=%s&amp;ver=%s&amp;arch=%s&amp;count=%s&quot; % (url_base,api,ver,arch,count)

# request the system
dat=urllib.urlopen(get_nodes_url).read()
b=json.loads(dat)
cmd=&quot;&quot;&quot;ssh -t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@%s &apos;
	yum -y install curl &amp;&amp;
	curl %s | bash -
&apos;&quot;&quot;&quot; % (b[&apos;hosts&apos;][0], script_url)
print cmd
rtn_code=subprocess.call(cmd, shell=True)

# return the system(s) to duffy
done_nodes_url=&quot;%s/Node/done?key=%s&amp;ssid=%s&quot; % (url_base, api, b[&apos;ssid&apos;])
das=urllib.urlopen(done_nodes_url).read()

sys.exit(rtn_code)
</command>
    </hudson.plugins.python.Python>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.1">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>