# vim:ft=ansible:
---
- hosts: localhost
  tasks:
  - name: Create an ssh keypair
    shell: ssh-keygen -b 2048 -t rsa -f $WORKSPACE/glusto -q -N ""
    args:
      creates: "{{ lookup('env', 'WORKSPACE')}}/glusto"

- hosts: gluster_nodes[0]
  tasks:
  - name: Copy ssh key
    copy: src="{{ lookup('env', 'WORKSPACE') }}/glusto" dest=/root/.ssh/id_rsa mode=600

- hosts: gluster_nodes[1:]
  tasks:
  - name: Add entries to authorized_keys
    authorized_key: user=root key="{{ lookup('file','../../glusto.pub')}}"

- hosts: gluster_nodes
  tasks:
  - name: Setup EPEL
    yum: name=epel-release state=installed disable_gpg_check=yes
    #TODO: Enable GPG check

- hosts: gluster_nodes[1:]
  tasks:
  - name: Setup nightly repo
    yum_repository:
      name: gluster_nightly
      description: The nightly repo for Gluster
      baseurl: http://artifacts.ci.centos.org/gluster/nightly/master/$releasever/$basearch
      repo_gpgcheck: no

  - name: Install gluster
    yum: name={{ item }} state=installed disable_gpg_check=yes
    with_items:
    - glusterfs-server
    - glusterfs-cli

  - name: Install dependency packages
    yum: name={{ item }} state=installed disable_gpg_check=yes
    with_items:
    - nfs-utils
    - qemu-img
    - fuse
    - fuse-libs
    - libibverbs
    - ctdb
    - samba
    - samba-client
    - python-pip
    - libxml2-devel
    - libxslt-devel
    - gcc
    - python-devel

  - name: Install python-docx
    pip: name=python-docx state=present

  - name: Create the qemu-image
    command: "qemu-img create -f raw /var/{{item}} 50G"
    args:
      creates: "/var/{{item}}"
    with_items:
    - data1
    - data2
    - data3
    - data4
    tags: test

  - name: Run parted
    command: "parted /var/{{item}} mklabel gpt"
    with_items:
    - data1
    - data2
    - data3
    - data4

  - name: Assign full space to one partition
    command: "parted -a optimal /var/{{item}} mkpart p ext2 1024 100%"
    with_items:
    - data1
    - data2
    - data3
    - data4

  - name: Get the partition up
    command: "kpartx -avs /var/{{item}}"
    args:
      creates: "/dev/mapper/{{item}}"
    with_items:
    - data1
    - data2
    - data3
    - data4

  - name: Run mkfs
    shell: "mkfs.xfs /dev/mapper/{{item}}"
    with_items:
    - loop0p1
    - loop1p1
    - loop2p1
    - loop3p1

  - name: Mount the bricks
    mount: name="/mnt/{{item.0}}" src="/dev/mapper/{{item.1}}" state=mounted fstype=xfs
    with_together:
    - ['vol0', 'vol1', 'vol2', 'vol3']
    - ['loop0p1', 'loop1p1', 'loop2p1', 'loop3p1']

  - name: Start Gluster Daemon
    service: name=glusterd state=started

  - name: Stop Firewall
    service: name=firewalld state=stopped

  - name: Status rpcbind
    service: name=rpcbind state=started

  - name: Start smb
    service: name=smb state=started

  - name: Setup Samba credentials
    shell: (echo "foobar"; echo "foobar") | smbpasswd -a root

- hosts: gluster_nodes[1]
  tasks:
  - name: Peer probe all nodes
    command: "gluster peer probe {{hostvars[item]['ansible_eth0']['ipv4']['address']}}"
    with_items: "{{groups['gluster_nodes'][2:]}}"

- hosts: gluster_nodes[0]
  tasks:
  - name: Copy ssh key
    copy: src="{{ lookup('env', 'WORKSPACE') }}/glusto" dest=/root/.ssh/id_rsa mode=600

  - name: Install git and pip
    yum: name="{{item}}" state=present disable_gpg_check=yes
    with_items:
    - git
    - python-pip

  - name: Install Glusto
    pip: name=' git+git://github.com/loadtheaccumulator/glusto.git' editable=false

  - name: Clone the gluster-tests repo
    git: repo=https://github.com/gluster/glusto-tests.git dest=/root/glusto-tests

  - name: Install glustolibs-gluster
    command: python setup.py develop chdir=/root/glusto-tests/glustolibs-gluster

  - name: Install glustolibs-io
    command: python setup.py develop chdir=/root/glusto-tests/glustolibs-io

  - name: Create the config file
    template: src=templates/gluster_tests_config.yml.j2 dest=/root/gluster_tests_config.yml
